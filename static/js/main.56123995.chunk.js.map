{"version":3,"sources":["types/CompletionFilter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModalMessage/TodoModalMessage.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["CompletionFilter","TodoItem","selectedTodo","todo","changeSelectedTodo","id","title","completed","isTodoSelected","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","searchQuery","changeSearchQuery","completionStatus","changeCompletionStatus","value","onChange","event","target","Object","values","string","toUpperCase","slice","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModalMessage","user","href","email","name","TodoModal","useState","setUser","isLoading","setIsLoading","userId","useEffect","getUser","foundUser","catch","error","console","warn","finally","getFilteredTodos","dataToFilter","completionParam","filteredTodos","normalisedQuery","toLowerCase","trim","filter","includes","filterByQuery","All","Completed","filterByCompletion","App","todosFromServer","setTodosFromServer","setSelectedTodo","completionFilter","setCompletionFilter","setSearchQuery","todoList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56123995.chunk.js","sourcesContent":["export enum CompletionFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  changeSelectedTodo: (value: Todo) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  selectedTodo,\n  todo,\n  changeSelectedTodo,\n}) => {\n  const { id, title, completed } = todo;\n  const isTodoSelected = id === selectedTodo?.id;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">\n        {id}\n      </td>\n\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => changeSelectedTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames(\n              'far',\n              {\n                'fa-eye': !isTodoSelected,\n                'fa-eye-slash': isTodoSelected,\n              },\n            )}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null,\n  changeSelectedTodo: (value: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  changeSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          changeSelectedTodo={changeSelectedTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import { CompletionFilter } from '../../types/CompletionFilter';\n\ntype Props = {\n  searchQuery: string,\n  changeSearchQuery: (value: string) => void,\n  completionStatus: CompletionFilter,\n  changeCompletionStatus: (value: CompletionFilter) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchQuery,\n  changeSearchQuery,\n  completionStatus,\n  changeCompletionStatus,\n}) => {\n  const capitalizeFirstLetter = (string: string) => {\n    return string[0].toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={completionStatus}\n            data-cy=\"statusSelect\"\n            onChange={event => (\n              changeCompletionStatus(event.target.value as CompletionFilter))}\n          >\n            {Object.values(CompletionFilter).map(value => (\n              <option\n                key={value}\n                value={value}\n              >\n                {capitalizeFirstLetter(value)}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => changeSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => changeSearchQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  title: string;\n  user: User | null;\n  completed: boolean,\n};\n\nexport const TodoModalMessage: React.FC<Props> = ({\n  title,\n  user,\n  completed,\n}) => {\n  return (\n    user\n      ? (\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* <strong className=\"has-text-success\">Done</strong> */}\n            {completed\n              ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              )\n              : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n            {' by '}\n\n            <a href={`mailto:${user.email}`}>\n              {user.name}\n            </a>\n          </p>\n        </div>\n      )\n      : (\n        <div className=\"modal-card-body\">\n          <p className=\"block has-text-danger\" data-cy=\"modal-title\">\n            Something went wrong :(\n          </p>\n        </div>\n      )\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { TodoModalMessage } from '../TodoModalMessage/TodoModalMessage';\n\ntype Props = {\n  selectedTodo: Todo,\n  changeSelectedTodo: (value: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  changeSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const {\n    id, title, userId, completed,\n  } = selectedTodo;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(userId)\n      .then((foundUser) => setUser(foundUser))\n      // eslint-disable-next-line\n      .catch((error) => console.warn(error))\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => changeSelectedTodo(null)}\n            />\n          </header>\n\n          <TodoModalMessage\n            title={title}\n            completed={completed}\n            user={user}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { CompletionFilter } from './types/CompletionFilter';\n\nfunction filterByQuery(todos: Todo[], searchQuery: string) {\n  const normalisedQuery = searchQuery.toLowerCase().trim();\n\n  return todos.filter(({ title }) => title.toLowerCase().includes(normalisedQuery));\n}\n\nfunction filterByCompletion(todos: Todo[], completionParam: CompletionFilter) {\n  if (completionParam === CompletionFilter.All) {\n    return todos;\n  }\n\n  const completionStatus = completionParam === CompletionFilter.Completed;\n\n  return todos.filter(({ completed }) => completed === completionStatus);\n}\n\nfunction getFilteredTodos(dataToFilter: Todo[], completionParam: CompletionFilter, searchQuery: string) {\n  let filteredTodos = dataToFilter;\n\n  filteredTodos = filterByQuery(filteredTodos, searchQuery);\n  filteredTodos = filterByCompletion(filteredTodos, completionParam);\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const [completionFilter, setCompletionFilter] = useState<CompletionFilter>(CompletionFilter.All);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredTodos = getFilteredTodos(todosFromServer, completionFilter, searchQuery);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todoList) => {\n        setTodosFromServer(todoList);\n      })\n      // eslint-disable-next-line\n      .catch((error) => console.warn(error))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                changeSearchQuery={setSearchQuery}\n                completionStatus={completionFilter}\n                changeCompletionStatus={setCompletionFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    changeSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          changeSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}